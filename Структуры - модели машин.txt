#include <iostream>
#include <Windows.h>
#include <string>
#include <iomanip>
#include <vector>
#include <fstream>

using namespace std;

struct car
{
	int id;
	int year;
	string mark;
	string kat;
	float price;
	bool old;
};

int main()
{
	SetConsoleOutputCP(1251);
	SetConsoleCP(1251);
	vector<car> model;
	ofstream fout;
	ifstream fin;
	fin.open("example.txt");
	if (fin.is_open())
	{
		while (!fin.eof()) //BEZ ! 
		{
			car buf;
			fin >> buf.id;
			fin >> buf.mark;
			fin >> buf.year;
			fin >> buf.kat;
			fin >> buf.price;
			fin >> buf.old;
			model.push_back(buf);
		}
		fin.close();
	}
	else
	{
		cout << "Не удалось загрузить базу" << endl;
	}
	int answer = -1;
	
	while (answer != 0)
	{
		cout << "1. Распечатка\n2. Добавление\n3. Удаление\n4. Распечатка по классу\n5. Сохранение в файл\n6. Сортировка\n7. Инфо по цене\n0. Выход" << endl;
		cout << "--> ";
		cin >> answer;
		switch (answer)
		{
			case 1:
			{
				for (int i = 0; i < model.size(); i++)
				{
					cout << "ID: " << model[i].id << "\nМарка: " << model[i].mark << "\nКласс: " << model[i].kat << " \nЦена: " << model[i].price << " руб. \nГод выпуска: " << model[i].year << " \nПоддерживаемость:" << model[i].old << "\n____________________________" << endl;
				}
				break;
			}
			case 2:
			{
				car a;
				cout << "ID: ";
				cin >> a.id;
				cout << "Марка: ";
				cin >> a.mark;
				cout << "Класс: ";
				cin >> a.kat;
				cout << "Цена: ";
				cin >> a.price;
				cout << "Год выпуска: ";
				cin >> a.year;
				cout << "Поддерживаемость: ";
				cin >> a.old;
				model.push_back(a);
				break;
			}
			case 3:
			{
				char o;
				cout << "Удаление по параметру(ID(I) или марка(M)): ";
				cin >> o;
				if (o == 'I')
				{
					int I;
					cout << "Введите ID: ";
					cin >> I;
					I--;
					model.erase(model.begin() + I);
				}
				if (o == 'M')
				{
					string m;
					cout << "Введите марку: ";
					cin >> m;
					for (int i = 0; i < model.size(); i++)
					{
						if (model[i].mark == m)
						{
							model.erase(model.begin() + i);
						}
					}
				}
				break;
			}
			case 4:
			{
				string cat;
				cout << "Категория: ";
				cin >> cat;
				for (int i = 0; i < model.size(); i++)
				{
					if (model[i].kat == cat)
					{
						cout << "ID: " << model[i].id << "\nМарка: " << model[i].mark << "\nКласс: " << model[i].kat << " \nЦена: " << model[i].price << " руб. \nГод выпуска: " << model[i].year << " \nПоддерживаемость:" << model[i].old << "\n____________________________" << endl;
					}
				}
				break;
			}
			case 5:
			{
				fout.open("example.txt");
				for (int i = 0; i < model.size(); i++)
				{
					fout << model[i].id << " " << model[i].mark << " " << model[i].kat << " " << model[i].price << " " << model[i].year << " " << model[i].old << endl;
				}
				fout.close();
				break;
			}
			case 6:
			{
				for (int i = 0; i < model.size() - 1; i++)
				{
					for (int j = 0; j < model.size() - 1; j++)
					{
						if (model[j].year > model[j + 1].year)
						{
							swap(model[j], model[j + 1]);
						}
					}
				}
				break;
			}
			case 7:
			{
				int pr;
				cout << "Введите цену: ";
				cin >> pr;
				for (int i = 0; i < model.size(); i++)
				{
					if (model[i].price >= pr)
					{
						cout << "ID: " << model[i].id << "\nМарка: " << model[i].mark << "\nКласс: " << model[i].kat << " \nЦена: " << model[i].price << " руб. \nГод выпуска: " << model[i].year << " \nПоддерживаемость:" << model[i].old << "\n____________________________" << endl;
					}
				}
				break;
			}
			case 0:
			{
				exit(0);
				break;
			}
			default:
			{
				cout << "ERROR" << endl;
				exit(0);
			}
		}
	}
	
	



	system("pause");
}